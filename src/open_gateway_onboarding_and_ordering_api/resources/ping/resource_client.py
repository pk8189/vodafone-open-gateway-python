"""File Generated by Sideko (sideko.dev)"""

from open_gateway_onboarding_and_ordering_api.core import (
    RequestOptions,
    default_request_options,
    SyncBaseClient,
    AsyncBaseClient,
)
import typing


class PingClient:
    def __init__(self, *, base_client: SyncBaseClient):
        self._base_client = base_client
        # register sync resources (keep comment for code generation)

    # register sync api methods (keep comment for code generation)
    def list(self, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        This API is for checking the upstream system is up and running.
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send sync request (keep comment for code generation)
        return self._base_client.request(
            method="GET",
            path="/ping",
            auth_names=["oAuth2ClientCredentials"],
            cast_to=type(None),
            request_options=request_options or default_request_options(),
        )
        # end -- send sync request (keep comment for code generation)


class AsyncPingClient:
    def __init__(self, *, base_client: AsyncBaseClient):
        self._base_client = base_client
        # register async resources (keep comment for code generation)

    # register async api methods (keep comment for code generation)
    async def list(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        This API is for checking the upstream system is up and running.
        """
        # start -- build request data (keep comment for code generation)
        # end -- build request data (keep comment for code generation)

        # start -- send async request (keep comment for code generation)
        return await self._base_client.request(
            method="GET",
            path="/ping",
            auth_names=["oAuth2ClientCredentials"],
            cast_to=type(None),
            request_options=request_options or default_request_options(),
        )
        # end -- send async request (keep comment for code generation)
