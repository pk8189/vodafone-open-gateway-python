"""File Generated by Sideko (sideko.dev)"""

import io
import typing

from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class CallbackReference(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    callback_data: typing.Optional[str] = _PydanticField(
        alias="callbackData", default=None
    )
    notify_url: typing.Optional[str] = _PydanticField(alias="notifyURL", default=None)


class SubscriptionRsp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    callback_reference: typing.Optional[CallbackReference] = _PydanticField(
        alias="callbackReference", default=None
    )
    client_correlator: typing.Optional[str] = _PydanticField(
        alias="clientCorrelator", default=None
    )
    criteria: typing.Optional[str] = _PydanticField(alias="criteria", default=None)
    destination_address: typing.Optional[str] = _PydanticField(
        alias="destinationAddress", default=None
    )
    notification_format: typing.Optional[str] = _PydanticField(
        alias="notificationFormat", default=None
    )
    resource_url: typing.Optional[str] = _PydanticField(
        alias="resourceURL", default=None
    )


class SubscriptionRspCall(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    subscription: typing.Optional[SubscriptionRsp] = _PydanticField(
        alias="subscription", default=None
    )
