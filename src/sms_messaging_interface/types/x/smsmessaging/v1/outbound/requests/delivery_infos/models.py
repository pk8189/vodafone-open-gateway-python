"""File Generated by Sideko (sideko.dev)"""

import io
import typing

from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class DeliveryInfo(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    address: typing.Optional[str] = _PydanticField(alias="address", default=None)
    delivery_status: typing.Optional[str] = _PydanticField(
        alias="deliveryStatus", default=None
    )


class DeliveryInfoListRsp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    delivery_info: typing.Optional[typing.List[DeliveryInfo]] = _PydanticField(
        alias="deliveryInfo", default=None
    )
    resource_url: typing.Optional[str] = _PydanticField(
        alias="resourceURL", default=None
    )


class DeliveryInfoListRspCall(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    delivery_info_list: typing.Optional[DeliveryInfoListRsp] = _PydanticField(
        alias="deliveryInfoList", default=None
    )
