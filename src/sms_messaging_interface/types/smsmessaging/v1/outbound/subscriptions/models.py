"""File Generated by Sideko (sideko.dev)"""

import io
import typing

from pydantic import (
    BaseModel as _PydanticBaseModel,
    Field as _PydanticField,
    ConfigDict as _PydanticConfigDict,
)

ModelFiles = typing.List[
    typing.Tuple[str, typing.Union[typing.BinaryIO, io.BufferedReader]]
]


class CallbackReference(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    callback_data: typing.Optional[str] = _PydanticField(
        alias="callbackData", default=None
    )
    notify_url: typing.Optional[str] = _PydanticField(alias="notifyURL", default=None)


class DeliveryReceiptSubscriptionRsp(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    callback_reference: typing.Optional[CallbackReference] = _PydanticField(
        alias="callbackReference", default=None
    )
    filter_criteria: typing.Optional[str] = _PydanticField(
        alias="filterCriteria", default=None
    )
    resource_url: typing.Optional[str] = _PydanticField(
        alias="resourceURL", default=None
    )


class DeliverySubscriptionRspCall(_PydanticBaseModel):
    model_config = _PydanticConfigDict(
        arbitrary_types_allowed=True,
        populate_by_name=True,
    )

    delivery_receipt_subscription: typing.Optional[DeliveryReceiptSubscriptionRsp] = (
        _PydanticField(alias="deliveryReceiptSubscription", default=None)
    )
